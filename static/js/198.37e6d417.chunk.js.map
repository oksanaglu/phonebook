{"version":3,"file":"static/js/198.37e6d417.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  // max-width: 310px;\n  border-radius: 5px;\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-top: 3px;\n  :hover,\n  :focus {\n    border-color:  dodgerblue;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border-radius: 5px;\n  border: 1px solid black;\n   :hover {\n    background-color: dodgerblue;\n  }\n`;\n\n","import { useState } from 'react';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { toast } from 'react-toastify';\nimport { useFetchContactsQuery, useCreateContactMutation } from 'redux/contacts/contactsSliceApi';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const { data: contacts } = useFetchContactsQuery();\n  const [createContact] = useCreateContactMutation();\n\n  const handleChange = evt => {\n    const { value } = evt.currentTarget;\n\n    evt.currentTarget.name === 'name' ? setName(value) : setPhone(value);\n  };\n\n  const addContact = data => {\n    const contactName = contacts.map(contact => contact.name.toLowerCase());\n    const isAdding = contactName.includes(data.name.toLowerCase());\n\n    if (!isAdding) {\n      createContact(data);\n      reset();\n      toast.success(`Contact, ${name} successfully added`);\n    } else {\n      toast.error(`${data.name} is already in contacts.`);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const contact = {\n      name,\n      phone,\n    };\n\n    addContact(contact);\n  };\n\n  // очистка инпутов\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </Label>\n      <Label>\n        Phone\n        <Input\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"Phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={phone}\n          onChange={handleChange}\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  \n`;\n\nexport const Text = styled.p`\n margin: 10px 0;\n`\n\nexport const Button = styled.button`\n  margin-left: 20px;\n  \n  cursor: pointer;\n  height: 50%;\n  font-size: 13px;\n  border-radius: 5px;\n  border: 1px solid black;\n   :hover,\n   :focus {\n    background-color: dodgerblue;\n  }\n`;\n\n","import PropTypes from 'prop-types';\nimport { Item, Text, Button } from './ContactItem.styled';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsSliceApi';\n\nconst ContactItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <Item key={id}>\n      <Text>\n        {name}: {number}\n      </Text>\n      <Button\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n        disabled={isDeleting}\n      >\n        {isDeleting && <RotatingLines width=\"10\" />} Delete\n      </Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  // width: 320px;\n  // padding-left: 10px;\n  padding: 0;\n`;\n\nexport const Error = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.62;\n  letter-spacing: 0.03em;\n  text-align: center;\n  color: #232323;\n`;","export const getFilter = state => state.contacts.filter;\n","import ContactItem from 'components/ContactItem';\nimport Loader from 'components/Loader';\nimport { List, Error } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsSliceApi';\nimport { getFilter } from 'redux/contacts/selectors';\n\n\nconst ContactList = () => {\n  const { data: contacts, error, isLoading } = useFetchContactsQuery();\n\n  const filter = useSelector(getFilter);\n\n  const filterContacts = () => {\n    return (\n      contacts &&\n      contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    );\n  };\n\n  const contactList = filterContacts();\n  const renderContacts = contacts && !isLoading && contactList.length > 0;\n\n  return (\n    <List>\n      {renderContacts &&\n        contactList.map(({ id, name, phone }) => (\n          <ContactItem id={id} key={id} name={name} number={phone} />\n        ))}\n      {isLoading && <Loader />}\n      {error && (\n        <Error>Try adding phone details or contact your administrator</Error>\n      )}\n    </List>\n  );\n};\n\nexport default ContactList;","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-top: 3px;\n  :hover,\n  :focus {\n    border-color:  dodgerblue;\n  }\n`;","import * as React from 'react';\nimport { TextField } from '@mui/material';\nimport { Label } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filter } from 'redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterName = useSelector(getFilter);\n\n  const handleInput = evt => {\n    dispatch(filter(evt.currentTarget.value.trim()));\n  };\n\n  return (\n    <Label>\n      <TextField\n        variant=\"standard\"\n        Label=\"Find contacts by name\"\n        size=\"small\"\n        type=\"text\"\n        placeholder=\"Find contacts by name\"\n        value={filterName}\n        onChange={handleInput}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  height: 100vh;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 50px;\n`;\n\nexport const Error = styled.p`\n  color: red;\n  font-size: 16px;\n  text-align: center;\n  margin-top: 10px;\n`;\n\n","import ContactForm from \"components/ContactForm\";\nimport ContactList from \"components/ContactList\";\nimport Filter from \"components/Filter\";\nimport { useSelector } from \"react-redux\";\nimport { authSelectors } from \"redux/auth\";\nimport { Container, Error } from \"./ContactsPage.styled\";\n\n\nexport const ContactsPage = () => {\n    const error = useSelector(authSelectors.getUserError);\n    return (\n        <Container>\n            <ContactForm/>\n            <Filter/>\n            <ContactList/>\n            {error && <Error>{error}</Error>}\n        </Container>\n    );\n};\n\nexport default ContactsPage;"],"names":["Form","styled","Label","Input","Button","useState","name","setName","phone","setPhone","contacts","useFetchContactsQuery","data","useCreateContactMutation","createContact","handleChange","evt","value","currentTarget","reset","onSubmit","preventDefault","map","contact","toLowerCase","includes","toast","type","placeholder","pattern","title","onChange","required","Item","Text","id","number","useDeleteContactMutation","deleteContact","isDeleting","isLoading","onClick","disabled","width","List","Error","getFilter","state","filter","error","useSelector","contactList","renderContacts","length","Loader","dispatch","useDispatch","filterName","TextField","variant","size","trim","Container","authSelectors"],"sourceRoot":""}